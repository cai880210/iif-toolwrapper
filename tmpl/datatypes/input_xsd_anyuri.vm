

        // Input: ${input_variable}
        URL ${input_variable}Url = null;
        try {
            ${input_variable}Url = new URL(${input_variable});
            String ${input_variable}UrlStr = ${input_variable}Url.toString();
            if(!${input_variable}UrlStr.matches(getValueOfServiceParameter("serviceUrlFilter"))) {
                errorlog("Format of input URL \"" + ${input_variable} + "\" does not comply with security policy");
                return ${operationname}Result(fac, omNs);
            }
            infolog("URL of input file: " + ${input_variable}UrlStr);
        } catch (MalformedURLException ex) {
            errorlog("\"" + ${input_variable} + "\" is not a valid value for the "
                    + "parameter \"${input_variable}Url\"");
            return ${operationname}Result(fac, omNs);
        }

	// Determine the file name by taking the last part of the URL (and strip the extension)
        bits = ${input_variable}Url.toString().split("/");
        fileName = bits[bits.length - 1];
        if(fileName.contains(".")) {
           bits = fileName.split("\\.");
           fileName = bits[0];
        };

        String ${input_variable}Ext = StringUtils.getFileExtension(${input_variable}Url.toString());
        if (${input_variable}Ext == null) {
            ${input_variable}Ext = "tmp";
        }
        File ${input_variable}File = null;
        try {
            ${input_variable}File = FileUtils.urlToFile(${input_variable}Url, ${input_variable}Ext);
            if (!${input_variable}File.exists()) {
                errorlog("Input file " + ${input_variable}File.toString() + " is not available");
                return ${operationname}Result(fac, omNs);
            }
            infolog("Input file created: " + ${input_variable}File.getAbsolutePath());
            // Mapping to command line pattern variable
            ${mapping}
        } catch(IOException ex) {
            errorlog("Unable to read from URL \"" + ${input_variable}Url + "\"");
            return ${operationname}Result(fac, omNs);
        }
